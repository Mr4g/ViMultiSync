<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:ViMultiSync.ViewModels"
		xmlns:controls="clr-namespace:ViMultiSync"
        xmlns:local="clr-namespace:ViMultiSync"
        xmlns:collections="clr-namespace:CommunityToolkit.Mvvm.Collections;assembly=CommunityToolkit.Mvvm"
        xmlns:dataModel="clr-namespace:ViMultiSync.DataModel"
        mc:Ignorable="d" d:DesignWidth="1240" d:DesignHeight="860"
        Width="1600"
        Height="800"
        x:Class="ViMultiSync.Views.MainWindow"
        x:DataType="viewModels:MainWindowViewModel"
		WindowStartupLocation="CenterScreen"
        Icon="/Assets/avalonia-logo.ico"
        Background="#0B0A0F"
        Title="ViMultiLink_Engage"
        ExtendClientAreaToDecorationsHint="True"
        ExtendClientAreaTitleBarHeightHint="-1"
        FontFamily="Century Gothic"
        SystemDecorations="BorderOnly">

	<Design.DataContext>
		<!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
		<viewModels:MainWindowViewModel/>
	</Design.DataContext>



	<Grid Name="MainGrid" RowDefinitions="Auto, *, Auto">

		<!-- Downtime Panel Popup Open -->

		<controls:AnimatedPopup
            Grid.Row="0"
            Grid.RowSpan="3"
			Grid.ColumnSpan="6"
            Margin="20"
            AnimationTime="0.3"
            UnderlayOpacity="0.2"
            Name="DowntimePanelPopup"
            Background="#232228"
			Open ="{Binding DowntimePanelIsOpen, Mode=TwoWay}"
            DuringOpening="{Binding ControlPanelVisible, Mode=TwoWay}">
			<Border Background="#232228" Padding="20" CornerRadius="24" >
				<ItemsControl ItemsSource="{Binding StatusPanel}">
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<ItemsControl ItemsSource="{Binding }">
								<ItemsControl.ItemTemplate>
									<DataTemplate x:DataType="dataModel:DowntimePanelItem">
										<Button
											Classes="PopupButton"
											Content="{Binding Status}"
											Command="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).DowntimePanelItemPressedCommand}"
											CommandParameter="{Binding}"
                                                ></Button>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>





				<!--<Expander Background ="#232228" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Expander.Header>
                        <Label  Content="STATUS"></Label>
                    </Expander.Header>
                    <StackPanel>
                        <Button Classes="PopupButton" Content="MECHANICZNA"/>
                        <Button Classes="PopupButton" Content="ELEKTRYCZNA"/>
                        <Button Classes="PopupButton" Content= "USTAWIACZ" />
                    </StackPanel>
                </Expander>-->
			</Border>
		</controls:AnimatedPopup>

        <!-- Setting Panel Popup Open -->

		<controls:AnimatedPopup
            Grid.Row="0"
            Grid.RowSpan="3"
            Grid.ColumnSpan="6"
            Margin="20"
            AnimationTime="0.3"
            UnderlayOpacity="0.2"
            Name="SettingPanelPopup"
            Background="#232228"
            Open="{Binding SettingPanelIsOpen, Mode=TwoWay}"
            DuringOpening="{Binding ControlPanelVisible, Mode=TwoWay}">
			<Border Background="#232228" Padding="20" CornerRadius="24">
				<ItemsControl ItemsSource="{Binding SettingStatusPanel}">
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<ItemsControl ItemsSource="{Binding}">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate >
										<UniformGrid Rows="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).RowForSettingPanel}" Columns="3" HorizontalAlignment="Center" VerticalAlignment="Center">
										</UniformGrid>
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate x:DataType="dataModel:SettingPanelItem">
										<Button
                                            Classes="PopupButton"
                                            Content="{Binding Status}"
                                            Command="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).SettingPanelItemPressedCommand}"
                                            CommandParameter="{Binding}">
										</Button>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</Border>
		</controls:AnimatedPopup>

        <!-- Maintenance Panel Popup Open-->

        <controls:AnimatedPopup
	         Grid.Row="0"
	         Grid.RowSpan="3"
	         Grid.ColumnSpan="6"
	         Margin="20"
	         AnimationTime="0.3"
	         UnderlayOpacity="0.2"
	         Name="MaintenancePanelPopup"
	         Background="#232228"
	         Open="{Binding MaintenancePanelIsOpen, Mode=TwoWay}"
             DuringOpening="{Binding ControlPanelVisible, Mode=TwoWay}">
			        <Border Background="#232228" Padding="20" CornerRadius="24">
				        <ItemsControl ItemsSource="{Binding MaintenanceStatusPanel}">
					        <ItemsControl.ItemTemplate>
						        <DataTemplate>
							        <ItemsControl ItemsSource="{Binding}">
								        <ItemsControl.ItemsPanel>
									        <ItemsPanelTemplate >
										        <UniformGrid Rows="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).RowForMaintenancePanel}" Columns="3" HorizontalAlignment="Center" VerticalAlignment="Center">
										        </UniformGrid>
									        </ItemsPanelTemplate>
								        </ItemsControl.ItemsPanel>
								        <ItemsControl.ItemTemplate>
									        <DataTemplate x:DataType="dataModel:MaintenancePanelItem">
										        <Button
                                                    Classes="PopupButton"
                                                    Content="{Binding Status}"
                                                    Command="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).MaintenancePanelItemPressedCommand}"
                                                    CommandParameter="{Binding}">
										        </Button>
									        </DataTemplate>
								        </ItemsControl.ItemTemplate>
							        </ItemsControl>
						        </DataTemplate>
					        </ItemsControl.ItemTemplate>
				        </ItemsControl>
			        </Border>
		        </controls:AnimatedPopup>

        <!-- Logistic Panel Popup Open-->

        <controls:AnimatedPopup
            Grid.Row="0"
            Grid.RowSpan="3"
            Grid.ColumnSpan="6"
            Margin="20"
            AnimationTime="0.3"
            UnderlayOpacity="0.2"
            Name="LogisticPanelPopup"
            Background="#232228"
            Open="{Binding LogisticPanelIsOpen, Mode=TwoWay}"
            DuringOpening="{Binding ControlPanelVisible, Mode=TwoWay}">
            <Border Background="#232228" Padding="20" CornerRadius="24">
                <ItemsControl ItemsSource="{Binding LogisticStatusPanel}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ItemsControl ItemsSource="{Binding}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate >
                                        <UniformGrid Rows="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).RowForLogisticPanel}" Columns="3" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        </UniformGrid>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate x:DataType="dataModel:LogisticPanelItem">
                                        <Button
                                            Classes="PopupButton"
                                            Content="{Binding Status}"
                                            Command="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).LogisticPanelItemPressedCommand}"
                                            CommandParameter="{Binding}">
                                        </Button>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Border>
        </controls:AnimatedPopup>

       <!--Splunk Panel Popup Open-->

		        <controls:AnimatedPopup
	        Grid.Row="0"
	        Grid.RowSpan="3"
	        Grid.ColumnSpan="6"
	        Margin="20"
	        AnimationTime="0.3"
	        UnderlayOpacity="0.2"
	        Name="SplunkPanelPopup"
	        Background="#232228"
			HorizontalAlignment="Right"
			VerticalAlignment="Top"
	        Open="{Binding SplunkPanelIsOpen, Mode=TwoWay}"
            DuringOpening="{Binding ControlPanelVisible, Mode=TwoWay}">
			        <Border Background="#232228" Padding="20" CornerRadius="24">
				        <ItemsControl ItemsSource="{Binding SplunkPanel}">
					        <ItemsControl.ItemTemplate>
						        <DataTemplate>
									<Expander>
										<Expander.Header>
                                            <Label MinHeight="60" MinWidth="200" x:DataType ="collections:IReadOnlyObservableGroup" Content="{Binding Key}"></Label>
                                        </Expander.Header>
                                        <ItemsControl ItemsSource="{Binding}">
								        <ItemsControl.ItemTemplate>
									        <DataTemplate x:DataType="dataModel:SplunkPanelItem">
										        <Button
                                                    Classes="PopupButton"
                                                    Content="{Binding Name}"
                                                    Command="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).SplunkPanelItemPressedCommand}"
                                                    CommandParameter="{Binding}">
										        </Button>
									        </DataTemplate>
								        </ItemsControl.ItemTemplate>
							        </ItemsControl>
                                    </Expander>
						        </DataTemplate>
					        </ItemsControl.ItemTemplate>
				        </ItemsControl>
			        </Border>
		        </controls:AnimatedPopup>

		<!-- Title bar -->

		<Border Background="#0B0A0F" Margin="0" Grid.Row="0" Height="100" CornerRadius="0,0,0,0">
			<Grid ColumnDefinitions="10, Auto, Auto, *,Auto, Auto, Auto, 10" Margin ="1">
				<Image Source="/Assets/logo.png" VerticalAlignment="Center" Grid.Column="1" Width="260" />
				<Rectangle Grid.Column="3" Fill="#0B0A0F" />

				<Grid.Styles>
					<Style Selector="Button">
						<Setter Property="Margin" Value="5,15,5,15"></Setter>
						<Setter Property="CornerRadius" Value="18"></Setter>
					</Style>
					<Style Selector="Button:pointerover /template/ ContentPresenter#PART_ContentPresenter">
						<Setter Property="Background" Value="#232228" />
					</Style>
				</Grid.Styles>

				<Button Grid.Column="4" Command="{Binding LoadPageSap}">
					<Image Source="{SvgImage /Assets/icons/sap.svg}"/>
				</Button>
				<Button Grid.Column="5" Name="SplunkPanelButton" Command="{Binding #SplunkPanelPopup.BeginOpen}">
					<Image Source="{SvgImage /Assets/icons/splunk.svg}"/>
				</Button>
				<Button Grid.Column="6">
					<Image Source="{SvgImage /Assets/icons/gears.svg}"/>
				</Button>
			</Grid>
		</Border>

		<!-- Main area -->

		<Grid  Grid.Row="1" ColumnDefinitions="Auto, *" >
            <!-- Navigation bar -->

			<StackPanel Grid.Row="0" Grid.Column="0" Width="250" Margin="10, 60, 20, 10" Orientation="Vertical" VerticalAlignment="Top" HorizontalAlignment="Center">

				<Button Classes="NavigationButton" Name="DowntimePanelButton" Command="{Binding #DowntimePanelPopup.BeginOpen}">
					<StackPanel Orientation="Horizontal" Margin="5">
						<Image HorizontalAlignment="Left" Source="{SvgImage /Assets/icons/emergencyColor.svg}"/>
						<TextBlock Text="Downtime" />
					</StackPanel>
				</Button>
				<Button Classes="NavigationButton" Name="SettingPanelButton" Command="{Binding #SettingPanelPopup.BeginOpen}">
					<StackPanel Orientation="Horizontal"  Margin="5">
						<Image HorizontalAlignment="Left" Source="{SvgImage /Assets/icons/maintenance2.svg}"/>
						<TextBlock Text="Setting" />
					</StackPanel>
				</Button>
				<Button Classes="NavigationButton" Name="MaintenancePanelButton" Command="{Binding #MaintenancePanelPopup.BeginOpen}">
					<StackPanel Orientation="Horizontal"  Margin="5">
						<Image HorizontalAlignment="Left" Source="{SvgImage /Assets/icons/broom.svg}"/>
						<TextBlock  Text="Maintenance" />
					</StackPanel>
				</Button>
				<Button Classes="NavigationButton" Name="LogisticPanelButton" Command="{Binding #LogisticPanelPopup.BeginOpen}">
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Left"  Margin="5">
						<Image HorizontalAlignment="Left" Source="{SvgImage /Assets/icons/logistic.svg}"/>
						<TextBlock Text="Logistic"/>
					</StackPanel>
				</Button>
				<Grid RowDefinitions="*">
					<StackPanel Margin="5,20,5,5">
                    <Button
						Grid.Row="0"
						Classes="NavigationInfoButton"
						IsVisible="{Binding ActualStatusButtonIsVisible}"
						Background="{Binding ActualStatusColor}"
                        VerticalAlignment="Bottom">
						<StackPanel Orientation="Horizontal" HorizontalAlignment="Center"  Margin="5">
							<TextBlock Text="{Binding ActualStatusButtonText}"/>
						</StackPanel>
					</Button>
					<Button
                        Classes="NavigationInfoButton"
                        IsVisible="{Binding ServiceArrivalVisible}"
                        Content="OCZEKIWANIE NA SERWIS"
                        Background="{Binding ServiceArrivalColor}">
                    </Button>
                    </StackPanel>
				</Grid>
			</StackPanel>
			<!-- ControlPanel -->
			<Border  Grid.Column="1">
				<Grid>
                    <Image Grid.ColumnSpan="3" Source="/Assets/logoW16.png" Stretch="None"/>
					<UserControl
                Grid.Column="1"
				IsVisible="{Binding !ControlPanelVisible}"
                CornerRadius="20 "
                Background="#232228"
                Content="{Binding ActivePage}"
                HorizontalAlignment="Stretch"
				Margin="10 20, 40, 30"
                VerticalAlignment="Stretch">
				</UserControl>
                </Grid>
			</Border>
		</Grid>


		<!-- Bottom bar -->
		<Grid Grid.Row="2">

		</Grid>
	</Grid>


</Window>
