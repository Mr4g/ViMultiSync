<Window
        xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:ViSyncMaster.ViewModels"
		xmlns:controls="clr-namespace:ViSyncMaster"
        xmlns:ViSyncMaster="clr-namespace:ViSyncMaster.Controls"
        xmlns:collections="clr-namespace:CommunityToolkit.Mvvm.Collections;assembly=CommunityToolkit.Mvvm"
        xmlns:dataModel="clr-namespace:ViSyncMaster.DataModel"
        xmlns:material="using:Material.Icons.Avalonia"
        mc:Ignorable="d" d:DesignWidth="1400" d:DesignHeight="1000"
        x:Class="ViSyncMaster.Views.MainWindow"
        x:DataType="viewModels:MainWindowViewModel"
		WindowStartupLocation="CenterScreen"
        Width="1600"
        Height="900"
        Icon="/Assets/W16icon2.ico"
        Background="#0B0A0F"
        Title="ViSyncMaster"
        ExtendClientAreaToDecorationsHint="True"
        ExtendClientAreaTitleBarHeightHint="-1"
        FontFamily="Century Gothic"
        RequestedThemeVariant="Light"
        SystemDecorations="BorderOnly">


	<!--<Window.KeyBindings>
		<KeyBinding Command="{Binding VacuumButtonPressedCommand}" Gesture="Enter"></KeyBinding>
	</Window.KeyBindings>-->

	<Design.DataContext>
		<!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
		<viewModels:MainWindowViewModel/>
	</Design.DataContext>


	<Grid Name="MainGrid" RowDefinitions="Auto, *, Auto">

		<!-- Info Panel Popup Open -->

		<controls:AnimatedPopup
				Grid.Row="0"
				Grid.RowSpan="3"
				Grid.ColumnSpan="6"
				Margin="20"
				AnimationTime="0.3"
				UnderlayOpacity="0.2"
				Name="InfoPanelPopup"
				Background="WhiteSmoke"
				HorizontalAlignment="Left"
				VerticalAlignment="Top"
				Open="{Binding InfoPanelIsOpen, Mode=TwoWay}"
				DuringOpening="{Binding ControlPanelVisible, Mode=TwoWay}">
			<Border Background="WhiteSmoke" Padding="20" CornerRadius="20">
				<StackPanel Background="WhiteSmoke">
					<ListBox ItemsSource="{Binding DeviceInfoPanel}">
						<ListBox.ItemTemplate>
							<DataTemplate>
								<StackPanel Margin="5" Orientation="Vertical">
									<StackPanel Orientation="Horizontal" Margin="5">
										<TextBlock Text="Serial Number: "
												   FontWeight="Bold"
												   FontSize="20"
												   Foreground="Black" />
										<TextBlock Text="{Binding SerialNumber}"
												   FontSize="18"
												   Foreground="Black" />
									</StackPanel>
									<StackPanel Orientation="Horizontal" Margin="5">
										<TextBlock Text="Hostname: "
												   FontWeight="Bold"
												   FontSize="20"
												   Foreground="Black" />
										<TextBlock Text="{Binding Hostname}"
												   FontSize="18"
												   Foreground="Black" />
									</StackPanel>
									<StackPanel Orientation="Horizontal" Margin="5">
										<TextBlock Text="AnyDesk ID: "
												   FontWeight="Bold"
												   FontSize="20"
												   Foreground="Black" />
										<TextBlock Text="{Binding AnyDeskId}"
												   FontSize="18"
												   Foreground="Black" />
									</StackPanel>
									<StackPanel Orientation="Horizontal" Margin="5">
										<TextBlock Text="Version app: 1.01"
												   FontWeight="Bold"
												   FontSize="20"
												   Foreground="Black" />
									</StackPanel>
								</StackPanel>
							</DataTemplate>
						</ListBox.ItemTemplate>
					</ListBox>
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="22,20,20,30">
						<TextBlock Text="SSID: "
								   FontWeight="Bold"
								   FontSize="20"
								   Foreground="Black" />
						<TextBlock Text="{Binding Ssid}"
								   FontSize="18"
								   Foreground="Black" />
					</StackPanel>
					<Button
						Classes="TitleBarFlyoutsButton"
						Name ="ManulToViSMButton"
						Content="INSTRUKCJA"
						Command="{Binding LoadPageManualViSyncMaster}">
					</Button>
					<Button
						Classes="TitleBarFlyoutsButton"
						Background="#DC4E41"
						Name ="ExitButton2"
						Content="RESTART APP"
						Command="{Binding ExitPressedCommand}">
					</Button>
				</StackPanel>
			</Border>
		</controls:AnimatedPopup>

       <!-- Downtime Panel Popup Open -->

		<controls:AnimatedPopup
            Grid.Row="0"
            Grid.RowSpan="3"
			Grid.ColumnSpan="6"
            Margin="20"
            AnimationTime="0.3"
            UnderlayOpacity="0.2"
            Name="DowntimePanelPopup"
            Background="#232228"
			Open ="{Binding DowntimePanelIsOpen, Mode=TwoWay}"
            DuringOpening="{Binding ControlPanelVisible, Mode=TwoWay}">
			<Border Background="#232228" Padding="20" CornerRadius="24" >
				<ItemsControl ItemsSource="{Binding StatusPanel}">
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<ItemsControl ItemsSource="{Binding }">
								<ItemsControl.ItemTemplate>
									<DataTemplate x:DataType="dataModel:DowntimePanelItem">
										<Button
											Classes="PopupButton"
											Content="{Binding Status}"
											Command="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).ReportMachineDowntimeCommand}"
											CommandParameter="{Binding}"
                                                ></Button>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</Border>
		</controls:AnimatedPopup>
		<!-- Warrning Notice Panel Open -->

		<controls:AnimatedPopup
            Grid.Row="0"
            Grid.RowSpan="3"
            Grid.ColumnSpan="6"
            Margin="20"
            AnimationTime="0.3"
            UnderlayOpacity="0.2"
            Name="WarrningNotice"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Background="#232228"
            Open ="{Binding WarrningPanelIsOpen, Mode=TwoWay}"
            DuringOpening="{Binding ControlPanelVisible, Mode=TwoWay}">
			<Grid
				RowDefinitions="*, Auto">
				<TextBlock
                    Grid.Row="0"
                    HorizontalAlignment="Center"
                    FontSize="28"
                    Foreground="WhiteSmoke"
                    Margin="20">
					<Run>Status już istnieje: </Run>
					<Run
                        Text="{Binding WarrningNoticeText}" >
					</Run>
				</TextBlock>
				<Border Grid.Row="1" Background="{Binding WarrningNoticeColor}" Padding="80 50" CornerRadius="24">
					<StackPanel>
						<Button
							Classes="PopupButton"
							Command="{Binding WarrningNoticeStatusPanelPressedCommand}"
							Content="OK">
						</Button>
					</StackPanel>
				</Border>
			</Grid>
		</controls:AnimatedPopup>

		<!-- Reason Downtime Panel Popup Open-->

		<controls:AnimatedPopup
            Grid.Row="0"
            Grid.RowSpan="3"
            Grid.ColumnSpan="6"
            Margin="20"
            AnimationTime="0.3"
			HorizontalAlignment="Center"
			VerticalAlignment="Center"
            UnderlayOpacity="0.2"
            Name="ReasonDowntimeMechanicalPanel"
            Background="#232228"
            Open="{Binding ReasonDowntimeMechanicalPanelIsOpen, Mode=TwoWay}"
            DuringOpening="{Binding ControlPanelVisible, Mode=TwoWay}">
			<Grid
                RowDefinitions="*,Auto">
				<TextBlock
                    Grid.Row="0"
                    Text="Podaj powód przestoju"
                    HorizontalAlignment="Center"
                    FontSize="28"
                    Foreground="WhiteSmoke"
                    Margin="10"/>

				<Border Grid.Row="1" Background="#232228" Padding="20" CornerRadius="24">
					<ItemsControl ItemsSource="{Binding ReasonDowntimeMechanicalPanel}">
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<ItemsControl ItemsSource="{Binding}">
									<ItemsControl.ItemsPanel>
										<ItemsPanelTemplate >
											<UniformGrid Rows="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).RowForReasonDowntimeMechanicalPanel}" Columns="3" HorizontalAlignment="Center" VerticalAlignment="Center">
											</UniformGrid>
										</ItemsPanelTemplate>
									</ItemsControl.ItemsPanel>
									<ItemsControl.ItemTemplate>
										<DataTemplate x:DataType="dataModel:ReasonDowntimeMechanicalPanelItem">
											<Button
												Classes="PopupButton"
												Content="{Binding Reason}"
												Command="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).ReportMachineStatusCommand}"
												CommandParameter="{Binding}">
											</Button>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</Border>
			</Grid>
		</controls:AnimatedPopup>

		<!-- Downtime Reason Electric Panel Popup Open-->

		<controls:AnimatedPopup
            Grid.Row="0"
            Grid.RowSpan="3"
            Grid.ColumnSpan="6"
            Margin="20"
            AnimationTime="0.3"
			HorizontalAlignment="Center"
			VerticalAlignment="Center"
            UnderlayOpacity="0.2"
            Name="DowntimeReasonElectricPanel"
            Background="#232228"
            Open="{Binding DowntimeReasonElectricPanelIsOpen, Mode=TwoWay}"
            DuringOpening="{Binding ControlPanelVisible, Mode=TwoWay}">
			<Grid
                RowDefinitions="*,Auto">
				<TextBlock
                    Grid.Row="0"
                    Text="Podaj powód przestoju"
                    HorizontalAlignment="Center"
                    FontSize="28"
                    Foreground="WhiteSmoke"
                    Margin="10"/>

				<Border Grid.Row="1" Background="#232228" Padding="20" CornerRadius="24">
					<ItemsControl ItemsSource="{Binding DowntimeReasonElectricPanel}">
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<ItemsControl ItemsSource="{Binding}">
									<ItemsControl.ItemsPanel>
										<ItemsPanelTemplate >
											<UniformGrid Rows="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).RowForDowntimeReasonElectricPanel}" Columns="3" HorizontalAlignment="Center" VerticalAlignment="Center">
											</UniformGrid>
										</ItemsPanelTemplate>
									</ItemsControl.ItemsPanel>
									<ItemsControl.ItemTemplate>
										<DataTemplate x:DataType="dataModel:DowntimeReasonElectricPanelItem">
											<Button
												Classes="PopupButton"
												Content="{Binding Reason}"
												Command="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).ReportMachineStatusCommand}"
												CommandParameter="{Binding}">
											</Button>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</Border>
			</Grid>
		</controls:AnimatedPopup>

		<!-- Downtime Reason Setting Panel Popup Open-->

		<controls:AnimatedPopup
            Grid.Row="0"
            Grid.RowSpan="3"
            Grid.ColumnSpan="6"
            Margin="20"
            AnimationTime="0.3"
			HorizontalAlignment="Center"
			VerticalAlignment="Center"
            UnderlayOpacity="0.2"
            Name="DowntimeReasonLiderPanel"
            Background="#232228"
            Open="{Binding DowntimeReasonLiderPanelIsOpen, Mode=TwoWay}"
            DuringOpening="{Binding ControlPanelVisible, Mode=TwoWay}">
			<Grid
                RowDefinitions="*,Auto">
				<TextBlock
                    Grid.Row="0"
                    Text="Podaj powód przestoju"
                    HorizontalAlignment="Center"
                    FontSize="28"
                    Foreground="WhiteSmoke"
                    Margin="10"/>

				<Border Grid.Row="1" Background="#232228" Padding="20" CornerRadius="24">
					<ItemsControl ItemsSource="{Binding DowntimeReasonLiderPanel}">
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<ItemsControl ItemsSource="{Binding}">
									<ItemsControl.ItemsPanel>
										<ItemsPanelTemplate >
											<UniformGrid Rows="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).RowForDowntimeReasonLiderPanel}" Columns="3" HorizontalAlignment="Center" VerticalAlignment="Center">
											</UniformGrid>
										</ItemsPanelTemplate>
									</ItemsControl.ItemsPanel>
									<ItemsControl.ItemTemplate>
										<DataTemplate x:DataType="dataModel:DowntimeReasonLiderPanelItem">
											<Button
												Classes="PopupButton"
												Content="{Binding Reason}"
												Command="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).ReportMachineStatusCommand}"
												CommandParameter="{Binding}">
											</Button>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</Border>
			</Grid>
		</controls:AnimatedPopup>

		<!-- Downtime Reason KPTJ Panel Popup Open-->

		<controls:AnimatedPopup
            Grid.Row="0"
            Grid.RowSpan="3"
            Grid.ColumnSpan="6"
            Margin="20"
            AnimationTime="0.3"
			HorizontalAlignment="Center"
			VerticalAlignment="Center"
            UnderlayOpacity="0.2"
            Name="DowntimeReasonKptjPanel"
            Background="#232228"
            Open="{Binding DowntimeReasonKptjPanelIsOpen, Mode=TwoWay}"
            DuringOpening="{Binding ControlPanelVisible, Mode=TwoWay}">
			<Grid
                RowDefinitions="*,Auto">
				<TextBlock
                    Grid.Row="0"
                    Text="Podaj powód przestoju"
                    HorizontalAlignment="Center"
                    FontSize="28"
                    Foreground="WhiteSmoke"
                    Margin="10"/>

				<Border Grid.Row="1" Background="#232228" Padding="20" CornerRadius="24">
					<ItemsControl ItemsSource="{Binding DowntimeReasonKptjPanel}">
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<ItemsControl ItemsSource="{Binding}">
									<ItemsControl.ItemsPanel>
										<ItemsPanelTemplate >
											<UniformGrid Rows="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).RowForDowntimeReasonKptjPanel}" Columns="3" HorizontalAlignment="Center" VerticalAlignment="Center">
											</UniformGrid>
										</ItemsPanelTemplate>
									</ItemsControl.ItemsPanel>
									<ItemsControl.ItemTemplate>
										<DataTemplate x:DataType="dataModel:DowntimeReasonKptjPanelItem">
											<Button
												Classes="PopupButton"
												Content="{Binding Reason}"
												Command="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).ReportMachineStatusCommand}"
												CommandParameter="{Binding}">
											</Button>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</Border>
			</Grid>
		</controls:AnimatedPopup>

		<!-- Downtime Reason PLATE Panel Popup Open-->

		<controls:AnimatedPopup
            Grid.Row="0"
            Grid.RowSpan="3"
            Grid.ColumnSpan="6"
            Margin="20"
            AnimationTime="0.3"
			HorizontalAlignment="Center"
			VerticalAlignment="Center"
            UnderlayOpacity="0.2"
            Name="DowntimeReasonPlatePanel"
            Background="#232228"
            Open="{Binding DowntimeReasonPlatePanelIsOpen, Mode=TwoWay}"
            DuringOpening="{Binding ControlPanelVisible, Mode=TwoWay}">
			<Grid
                RowDefinitions="*,Auto">
				<TextBlock
                    Grid.Row="0"
                    Text="Podaj powód przestoju"
                    HorizontalAlignment="Center"
                    FontSize="28"
                    Foreground="WhiteSmoke"
                    Margin="10"/>

				<Border Grid.Row="1" Background="#232228" Padding="20" CornerRadius="24">
					<ItemsControl ItemsSource="{Binding DowntimeReasonPlatePanel}">
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<ItemsControl ItemsSource="{Binding}">
									<ItemsControl.ItemsPanel>
										<ItemsPanelTemplate >
											<UniformGrid Rows="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).RowForDowntimeReasonPlatePanel}" Columns="3" HorizontalAlignment="Center" VerticalAlignment="Center">
											</UniformGrid>
										</ItemsPanelTemplate>
									</ItemsControl.ItemsPanel>
									<ItemsControl.ItemTemplate>
										<DataTemplate x:DataType="dataModel:DowntimeReasonPlatePanelItem">
											<Button
												Classes="PopupButton"
												Content="{Binding Reason}"
												Command="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).ReportMachineStatusCommand}"
												CommandParameter="{Binding}">
											</Button>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</Border>
			</Grid>
		</controls:AnimatedPopup>

		<!-- Call For Service Panel Popup Open-->

		<controls:AnimatedPopup
            Grid.Row="0"
            Grid.RowSpan="3"
            Grid.ColumnSpan="6"
            Margin="20"
            AnimationTime="0.3"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            UnderlayOpacity="0.2"
            Name="CallForServicePanel"
            Background="#232228"
            Open="{Binding CallForServicePanelIsOpen, Mode=TwoWay}"
            DuringOpening="{Binding ControlPanelVisible, Mode=TwoWay}">
			<Grid
                RowDefinitions="*,Auto">
				<TextBlock
                    Grid.Row="0"
                    Text="Wybierz dalsze działanie"
                    HorizontalAlignment="Center"
                    FontSize="28"
                    Foreground="WhiteSmoke"
                    Margin="10"/>
				<Border Grid.Row="1" Background="OrangeRed" Padding="20" CornerRadius="24">
					<ItemsControl ItemsSource="{Binding CallForServicePanel}">
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<ItemsControl ItemsSource="{Binding}">
									<ItemsControl.ItemsPanel>
										<ItemsPanelTemplate >
											<UniformGrid Rows="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).RowForCallForServicePanel}" Columns="1" HorizontalAlignment="Center" VerticalAlignment="Center">
											</UniformGrid>
										</ItemsPanelTemplate>
									</ItemsControl.ItemsPanel>
									<ItemsControl.ItemTemplate>
										<DataTemplate x:DataType="dataModel:CallForServicePanelItem">
											<Button
												Classes="PopupButton"
												Content="{Binding Status}"
												Command="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).CallForServicePanelItemPressedCommand}"
												CommandParameter="{Binding}">
											</Button>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</Border>
			</Grid>
		</controls:AnimatedPopup>

		<!-- Service Arrival Panel Popup Open-->

		<controls:AnimatedPopup
            Grid.Row="0"
            Grid.RowSpan="3"
            Grid.ColumnSpan="6"
            Margin="20"
            AnimationTime="0.3"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            UnderlayOpacity="0.2"
            Name="ServiceArrivalPanel"
            Background="#232228"
            Open="{Binding ServiceArrivalPanelIsOpen, Mode=TwoWay}"
            DuringOpening="{Binding ControlPanelVisible, Mode=TwoWay}">
			<Grid
                RowDefinitions="*,Auto">
				<TextBlock
                    Grid.Row="0"
                    Text="Potwierdź przybycie UR"
                    HorizontalAlignment="Center"
                    FontSize="28"
                    Foreground="WhiteSmoke"
                    Margin="10"/>
				<Border Grid.Row="1" Background="OrangeRed" Padding="20" CornerRadius="24">
					<ItemsControl ItemsSource="{Binding ServiceArrivalPanel}">
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<ItemsControl ItemsSource="{Binding}">
									<ItemsControl.ItemsPanel>
										<ItemsPanelTemplate >
											<UniformGrid Rows="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).RowForServiceArrivalPanel}" Columns="2" HorizontalAlignment="Center" VerticalAlignment="Center">
											</UniformGrid>
										</ItemsPanelTemplate>
									</ItemsControl.ItemsPanel>
									<ItemsControl.ItemTemplate>
										<DataTemplate x:DataType="dataModel:ServiceArrivalPanelItem">
											<Button
												Classes="PopupButton"
												Content="{Binding Status}"
												Command="{Binding}"
												CommandParameter="{Binding}">
											</Button>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</Border>
			</Grid>
		</controls:AnimatedPopup>

		<!-- Setting Panel Popup Open -->

		<controls:AnimatedPopup
            Grid.Row="0"
            Grid.RowSpan="3"
            Grid.ColumnSpan="6"
            Margin="20"
            AnimationTime="0.3"
            UnderlayOpacity="0.2"
            Name="SettingPanelPopup"
            Background="#232228"
            Open="{Binding SettingPanelIsOpen, Mode=TwoWay}"
            DuringOpening="{Binding ControlPanelVisible, Mode=TwoWay}">
			<Border Background="#232228" Padding="20" CornerRadius="24">
				<ItemsControl ItemsSource="{Binding SettingStatusPanel}">
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<ItemsControl ItemsSource="{Binding}">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate >
										<UniformGrid Rows="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).RowForSettingPanel}" Columns="3" HorizontalAlignment="Center" VerticalAlignment="Center">
										</UniformGrid>
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate x:DataType="dataModel:SettingPanelItem">
										<Button
                                            Classes="PopupButton"
                                            Content="{Binding Status}"
                                            Command="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).ReportMachineStatusCommand}"
                                            CommandParameter="{Binding}">
										</Button>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</Border>
		</controls:AnimatedPopup>

		<!-- Maintenance Panel Popup Open-->

		<controls:AnimatedPopup
	         Grid.Row="0"
	         Grid.RowSpan="3"
	         Grid.ColumnSpan="6"
	         Margin="20"
	         AnimationTime="0.3"
	         UnderlayOpacity="0.2"
	         Name="MaintenancePanelPopup"
	         Background="#232228"
	         Open="{Binding MaintenancePanelIsOpen, Mode=TwoWay}"
             DuringOpening="{Binding ControlPanelVisible, Mode=TwoWay}">
			<Border Background="#232228" Padding="20" CornerRadius="24">
				<ItemsControl ItemsSource="{Binding MaintenanceStatusPanel}">
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<ItemsControl ItemsSource="{Binding}">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate >
										<UniformGrid Rows="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).RowForMaintenancePanel}" Columns="3" HorizontalAlignment="Center" VerticalAlignment="Center">
										</UniformGrid>
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate x:DataType="dataModel:MaintenancePanelItem">
										<Button
											Classes="PopupButton"
											Content="{Binding Status}"
											Command="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).ReportMachineStatusCommand}"
											CommandParameter="{Binding}">
										</Button>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</Border>
		</controls:AnimatedPopup>

		<!-- Logistic Panel Popup Open-->

		<controls:AnimatedPopup
            Grid.Row="0"
            Grid.RowSpan="3"
            Grid.ColumnSpan="6"
            Margin="20"
            AnimationTime="0.3"
            UnderlayOpacity="0.2"
            Name="LogisticPanelPopup"
            Background="#232228"
            Open="{Binding LogisticPanelIsOpen, Mode=TwoWay}"
            DuringOpening="{Binding ControlPanelVisible, Mode=TwoWay}">
			<Border Background="#232228" Padding="20" CornerRadius="24">
				<ItemsControl ItemsSource="{Binding LogisticStatusPanel}">
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<ItemsControl ItemsSource="{Binding}">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate >
										<UniformGrid Rows="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).RowForLogisticPanel}" Columns="3" HorizontalAlignment="Center" VerticalAlignment="Center">
										</UniformGrid>
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate x:DataType="dataModel:LogisticPanelItem">
										<Button
                                            Classes="PopupButton"
                                            Content="{Binding Status}"
                                            Command="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).ReportMachineStatusCommand}"
                                            CommandParameter="{Binding}">
										</Button>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</Border>
		</controls:AnimatedPopup>

		<!-- ProductionIssues Panel Popup Open-->

		<controls:AnimatedPopup
            Grid.Row="0"
            Grid.RowSpan="3"
            Grid.ColumnSpan="6"
            Margin="20"
            AnimationTime="0.3"
            UnderlayOpacity="0.2"
            Name="ProductionIssuesPanelPopup"
            Background="#232228"
            Open="{Binding ProductionIssuesPanelIsOpen, Mode=TwoWay}"
            DuringOpening="{Binding ControlPanelVisible, Mode=TwoWay}">
			<Border Background="#232228" Padding="20" CornerRadius="24">
				<ItemsControl ItemsSource="{Binding ProductionIssuesStatusPanel}">
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<ItemsControl ItemsSource="{Binding}">
								<ItemsControl.ItemsPanel>
									<ItemsPanelTemplate >
										<UniformGrid Rows="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).RowForProductionIssuesPanel}" Columns="3" HorizontalAlignment="Center" VerticalAlignment="Center">
										</UniformGrid>
									</ItemsPanelTemplate>
								</ItemsControl.ItemsPanel>
								<ItemsControl.ItemTemplate>
									<DataTemplate x:DataType="dataModel:ProductionIssuesPanelItem">
										<Button
                                            Classes="PopupButton"
                                            Content="{Binding Status}"
                                            Command="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).ReportMachineStatusCommand}"
                                            CommandParameter="{Binding}">
										</Button>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</Border>
		</controls:AnimatedPopup>


		<!--Splunk Panel Popup Open-->

		<controls:AnimatedPopup
	Grid.Row="0"
	Grid.RowSpan="3"
	Grid.ColumnSpan="6"
	Margin="20"
	AnimationTime="0.3"
	UnderlayOpacity="0.2"
	Name="SplunkPanelPopup"
	Background="#232228"
	HorizontalAlignment="Right"
	VerticalAlignment="Top"
	Open="{Binding SplunkPanelIsOpen, Mode=TwoWay}"
	DuringOpening="{Binding ControlPanelVisible, Mode=TwoWay}">
			<Border Background="#232228" CornerRadius="24">
				<ItemsControl ItemsSource="{Binding SplunkPanel}">
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<Expander>
								<Expander.Header>
									<Label MinHeight="60" MinWidth="200" x:DataType ="collections:IReadOnlyObservableGroup" Content="{Binding Key}"></Label>
								</Expander.Header>
								<ItemsControl ItemsSource="{Binding}">
									<ItemsControl.ItemTemplate>
										<DataTemplate x:DataType="dataModel:SplunkPanelItem">
											<Button
												Classes="TitleBarFlyoutsButton"
												Content="{Binding Name}"
												Command="{Binding $parent[controls:AnimatedPopup].((viewModels:MainWindowViewModel)DataContext).SplunkPanelItemPressedCommand}"
												CommandParameter="{Binding}">
											</Button>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</Expander>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</Border>
		</controls:AnimatedPopup>


		<!--Options Panel Popup Open-->

		<controls:AnimatedPopup
            Grid.Row="0"
            Grid.RowSpan="3"
            Grid.ColumnSpan="6"
            Margin="20"
            AnimationTime="0.3"
            UnderlayOpacity="0.2"
            Name="OptionsPanelPopup"
            Background="WhiteSmoke"
            HorizontalAlignment="Right"
            VerticalAlignment="Top"
            Open="{Binding OptionsPanelIsOpen, Mode=TwoWay}"
            DuringOpening="{Binding ControlPanelVisible, Mode=TwoWay}">
			<Border Background="WhiteSmoke" Padding="20" CornerRadius="20">
				<StackPanel Background="WhiteSmoke">
					<TextBox
						Margin="5,5"
						Name="PasswordTextBox"
						TextInputOptions.ContentType="Digits"
						Text="{Binding EnteredPassword}"
						Watermark="Wprowadź hasło" PasswordChar="*">
						<TextBox.KeyBindings>
							<KeyBinding
								Gesture="Enter"
								Command="{Binding LoginButtonPressedCommand}"/>
						</TextBox.KeyBindings>
					</TextBox>
					<Button
						Classes="TitleBarFlyoutsButton"
						Name ="Login"
						Content="Login"
						Command="{Binding LoginButtonPressedCommand}">
					</Button>
					<Button
						Classes="TitleBarFlyoutsButton"
						Background="#DC4E41"
						Name ="ExitButton"
						Content="EXIT"
						Command="{Binding ExitPressedCommand}">
					</Button>
					<Button
						Classes="TitleBarFlyoutsButton"
						IsVisible="False"
						Name ="GetLookup"
						Content="GetLookup"
						Command="{Binding GetLookupButtonPressedCommand}">
					</Button>
					<Button
						Classes="TitleBarFlyoutsButton"
						Name = "OpenSerialPortButton"
						IsVisible="{Binding OpenSerialPortButtonIsVisible}"
						Command="{Binding OpenSerialPort}"
                        Content="RS232">
					</Button>
					<Button
						Classes="TitleBarFlyoutsButton"
						Name ="OpenFilesButton"
						Content="OTWÓRZ PLIKI"
						IsVisible="{Binding IsPasswordProtected}"
						Command="{Binding OpenFilesButtonPressedCommand}">
					</Button>
					<Button
						Classes="TitleBarFlyoutsButton"
						Name = "MinimizationButton"
						Content="MINIMALIZAJCA"
						IsVisible="{Binding IsPasswordProtected}"
						Command="{Binding MinimizeApplicationCommand}">
					</Button>
					<Expander
						Margin="0, 10"
                        IsVisible="{Binding IsPasswordProtected}">
						<Expander.Header>
							<Label
                                Content="Options"
                                MinWidth="180">
							</Label>
						</Expander.Header>
						<Grid RowDefinitions="Auto, Auto, Auto, Auto, *">
							<StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0,10">
								<ToggleButton Classes="ToggleOptions" IsChecked="{Binding IsTimeStampFromiPC}" Margin="0,0,10,0"/>
								<Label Content="Timestamp from iPC" FontWeight="Bold"/>
							</StackPanel>
							<StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0,10">
								<ToggleButton Classes="ToggleOptions" Command="{Binding CreateScheduleForLoggingCommand}" IsChecked="{Binding IsLoginToApp}" Margin="0,0,10,0"/>
								<Label Content="Required app login." FontWeight="Bold"/>
							</StackPanel>
							<StackPanel Grid.Row="2" >
								<SplitButton Content="Options" >
									<SplitButton.Flyout>
										<MenuFlyout Placement="Bottom">
											<MenuItem Header="Zegary">
												<MenuItem Header="5 seconds" Click="MenuItem_Click" Tag="5" />
												<MenuItem Header="10 seconds" Click="MenuItem_Click" Tag="10" />
												<MenuItem Header="15 seconds" Click="MenuItem_Click" Tag="15" />
												<MenuItem Header="20 seconds" Click="MenuItem_Click" Tag="20" />
											</MenuItem>
											<MenuItem Header="Item 2" InputGesture="Ctrl+A" />
											<MenuItem Header="Item 3" />
										</MenuFlyout>
									</SplitButton.Flyout>
								</SplitButton>
							</StackPanel>
						</Grid>
					</Expander>
				</StackPanel>
			</Border>
		</controls:AnimatedPopup>

		<!--Login Panel Popup Open-->

		<controls:AnimatedPopup
            Grid.Row="0"
            Grid.RowSpan="3"
            Grid.ColumnSpan="6"
            Margin="20"
            AnimationTime="0.3"
            UnderlayOpacity="0.2"
            Name="LoginPanelPopup"
            Opacity="0.9"
            Background="Transparent"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Open="{Binding LoginPanelIsOpen,  Mode=TwoWay}"
            DuringOpening="{Binding ControlPanelVisible, Mode=TwoWay}">
			<Border Background="#3B3B39" Padding="20" CornerRadius="30" MinHeight="450" MinWidth="325">
				<Grid RowDefinitions="Auto, Auto, *, Auto, Auto">
					<Image Grid.Row="0" Margin="10"
						   VerticalAlignment="Top"
                           MaxHeight="250"
                           MaxWidth="250"
                           Source="/Assets/Vi2Little.png">
					</Image>
					<StackPanel Grid.Row="1" Margin="30" VerticalAlignment="Center">
						<Image
							   VerticalAlignment="Top"
							   MaxHeight="70"
							   MaxWidth="70"
							   Source="{SvgImage /Assets/icons/userThin.svg}">
						</Image>
						<Label
							Foreground="WhiteSmoke"
							Margin="10"
							FontSize="24"
							FontWeight="Bold"
                            HorizontalContentAlignment="Center"
							Content="{Binding LoginLabel}">
						</Label>
					</StackPanel>
					<StackPanel Grid.Row="3">
						<TextBox
						VerticalAlignment="Bottom"
						Margin="15,10,15,18"
						Name="LoginNameTextBox"
						FontSize="22"
						TextInputOptions.ContentType="Digits"
						Text="{Binding EnteredLogin}"
						Watermark="Skrót osobowy">
							<TextBox.KeyBindings>
								<KeyBinding
									Gesture="Enter"
									Command="{Binding LoginButtonPressedCommand}"/>
							</TextBox.KeyBindings>
						</TextBox>
					</StackPanel>
					<StackPanel Grid.Row="4" VerticalAlignment="Bottom">
						<Button
								Background="OrangeRed"
								Classes="NavigationButton"
								HorizontalContentAlignment="Center"
								Content="Login"
								Command="{Binding OperatorLoginButtonPressedCommand}">
						</Button>
						<Button
								Background="OrangeRed"
								Classes="NavigationButton"
								HorizontalContentAlignment="Center"
								Content="Logout"
								Command="{Binding OperatorLogoutButtonPressedCommand}">
						</Button>
					</StackPanel>
				</Grid>
			</Border>
		</controls:AnimatedPopup>

		<!--Vacuum Panel Popup Open-->

		<controls:AnimatedPopup
            Grid.Row="0"
            Grid.RowSpan="3"
            Grid.ColumnSpan="6"
            Margin="20,20,0,20"
            AnimationTime="0.3"
            UnderlayOpacity="0.2"
            Name="VacuumPanelPopup"
            Opacity="0.9"
			Opened="VacuumPanelPopup_OnOpened"
			Closed="VacuumPanelPopup_OnClosed"
			MinimizedWidth="0"
			MinimizedHeight="500"
            Background="Green"
            HorizontalAlignment="Right"
            VerticalAlignment="Center"
			IsMinimized="true"
            Open="{Binding VacuumPanelIsOpen,  Mode=TwoWay}"
            DuringOpening="{Binding ControlPanelVisible, Mode=TwoWay}">
			<Border Background="#3B3B39" Padding="20" CornerRadius="30, 0 , 0, 30" MinHeight="450" MinWidth="350">
				<Grid RowDefinitions="*, Auto, Auto, Auto, Auto, Auto, Auto, *" ColumnDefinitions="Auto, *, Auto">
					<StackPanel Grid.Row="1" Grid.Column="0" Grid.RowSpan="8" HorizontalAlignment="Center" VerticalAlignment="Center">

						<Button
                            MaxWidth="35"
                            MinHeight="450"
                            Background="#3B3B39"
                            Command="{Binding #VacuumPanelPopup.BeginClose}"
                            HorizontalContentAlignment="Center"
                            VerticalContentAlignment="Center">
							<Image MaxHeight="35" MaxWidth="35" Source="{SvgImage /Assets/icons/arrowsWhite.svg}" />
						</Button>
					</StackPanel>
					<StackPanel Grid.Column="1" Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Top">
						<Image Margin="10,0,0,0"
                               VerticalAlignment="Top"
                               MaxHeight="30"
                               MaxWidth="30"
                               Source="{SvgImage /Assets/icons/barcode_scanner.svg}">
						</Image>
						<Label Margin="0,0,0,0"
                               FontWeight="Bold"
                               Foreground="Azure"
                               FontSize="26"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Top"
                               MaxHeight="250"
                               MaxWidth="250"
                               Content="Próżniowanie">
						</Label>
					</StackPanel>
					<StackPanel Grid.Column="1" Grid.Row="2" Margin="0, 20,0, 0" VerticalAlignment="Top" HorizontalAlignment="Center" Orientation="Horizontal">
						<Image
							   VerticalAlignment="Top"
							   Margin="20,0"
							   MaxHeight="70"
							   MaxWidth="70"
							   Source="{SvgImage /Assets/icons/barcodeWhite.svg}">
						</Image>
						<Image
                            VerticalAlignment="Top"
                            Margin="20,0"
                            MaxHeight="70"
                            MaxWidth="70"
                            Source="{SvgImage /Assets/icons/vacuumPumpWhite2.svg}">
						</Image>
					</StackPanel>
					<StackPanel Grid.Column="1" Grid.Row="3">
						<TextBox
						VerticalAlignment="Bottom"
						Margin="15,10,15,0"
						Name="NumberStationTextBox"
						FontSize="22"
						KeyDown="NumberStationTextBox_OnKeyDown"
						TextInputOptions.ContentType="Digits"
						Text="{Binding NumberStation}"
						Watermark="Numer stacji">
						</TextBox>
					</StackPanel>
					<StackPanel Grid.Column="1" Grid.Row="4" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0, 40, 15, 40" Orientation="Horizontal">
						<Button Content="POPRAWNE DANE"
                                Padding="15,10"
								Margin="0,0,25,0"
                                Background="Green"
								HorizontalAlignment="Left"
                                Command="{Binding SendMessageToPlcCommand}"
                                CornerRadius="12">
						</Button>
						<Button Content="USUŃ"
                                Padding="15,10"
                                Background="OrangeRed"
                                Command="{Binding ClearButtonPressedCommand}"
                                CornerRadius="12">
						</Button>
					</StackPanel>
					<StackPanel Grid.Column="1" Grid.Row="5" Margin="0,0,0,20" VerticalAlignment="Bottom" HorizontalAlignment="Center" Orientation="Horizontal">
						<Image
                            VerticalAlignment="Top"
                            Margin="20,0"
                            MaxHeight="70"
                            MaxWidth="70"
                            Source="{SvgImage /Assets/icons/barcodeWhite.svg}">
						</Image>
						<Image
                            VerticalAlignment="Top"
                            Margin="20,0"
                            MaxHeight="70"
                            MaxWidth="70"
                            Source="{SvgImage /Assets/icons/heatpumpWhite.svg}">
						</Image>
					</StackPanel>
					<StackPanel Grid.Column="1" Grid.Row="6" VerticalAlignment="Bottom">
						<TextBox
                            VerticalAlignment="Bottom"
                            Margin="15,10,15,10"
                            Name="VinHeatPumpTextBox"
                            FontSize="22"
							KeyDown="VinHeatPumpTextBox_OnKeyDown"
                            TextInputOptions.ContentType="Digits"
                            Text="{Binding VinHeatPump}"
                            Watermark="GNV pompy">
						</TextBox>
					</StackPanel>
					<StackPanel Grid.Column="1" Grid.Row="7" Margin="5" Orientation="Horizontal" HorizontalAlignment ="Center">
						<Grid VerticalAlignment="Center">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>
							<ProgressBar Grid.Row="0" Margin="10" Height="30" MinWidth="230"
                                         Minimum="0" Maximum="100" Value="{Binding ProgressBarValue}"
                                         Foreground="{StaticResource OrangeRedBrush}"
                                         FontWeight="SemiBold"
                                         FontSize ="18"/>

							<TextBlock Grid.Row="0" Text="{Binding RemainingVacuumTime, StringFormat={}{0:mm}:{0:ss}}"
                                       FontWeight="SemiBold" FontSize="18" Foreground="WhiteSmoke"
                                       HorizontalAlignment="Center" VerticalAlignment="Center">
							</TextBlock>
						</Grid>
						<!--<ViSyncMaster:CircleProgressBar
                                                       Width="90"
                                                       Height="90"
                                                       StrokeWidth="12"
                                                       IsIndeterminate="false"
                                                       Value="{Binding ProgressBarValue}">
                        <TextBlock Margin="0,1,0,0" FontWeight ="Bold" FontSize ="18" Text ="{Binding RemainingVacuumTime, StringFormat={}{0:mm}:{0:ss}}"></TextBlock>
                        </ViSyncMaster:CircleProgressBar>-->
					</StackPanel>
				</Grid>
			</Border>
		</controls:AnimatedPopup>

		<!-- Title bar -->

		<Border Background="#0B0A0F" Margin="0" Grid.Row="0" Height="100" CornerRadius="0,0,0,0" IsVisible="true">
			<Grid ColumnDefinitions="10, Auto, Auto,* ,Auto , Auto, Auto, Auto, Auto, Auto, Auto, Auto, Auto, Auto, Auto, Auto,Auto, 10" Margin ="1">
				<StackPanel Grid.Column="1" Orientation="Vertical">
					<Image Source="/Assets/logo.png" VerticalAlignment="Center" Grid.Column="1" Width="260" />
				</StackPanel>
				<Grid.Styles>
					<Style Selector="Button">
						<Setter Property="Background" Value="Transparent"></Setter>
						<Setter Property="Margin" Value="5,15,5,15"></Setter>
						<Setter Property="CornerRadius" Value="18"></Setter>
					</Style>
					<Style Selector="Button:pointerover /template/ ContentPresenter#PART_ContentPresenter">
						<Setter Property="Background" Value="#232228" />
					</Style>
				</Grid.Styles>
				<Label Grid.Column="3"
                       IsVisible="True"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       MinHeight="50"
                       MinWidth="200"
                       Foreground="WhiteSmoke"
                       FontSize="28"
                       FontWeight="Bold">
					<Label.Content>
						<MultiBinding StringFormat="{}{0} / {1}">
							<Binding Path="BarOnTopApp" />
							<Binding Path="LoginLabel"/>
						</MultiBinding>
					</Label.Content>
				</Label>
				<Button Grid.Column="4"
	                    Name = "InfoPanelButton"
	                    Command="{Binding InfoButtonPressedCommand}">
					<Image Source="{SvgImage /Assets/icons/info2.svg}"/>
				</Button>
				<Button Grid.Column="5"
						Name = "TableResultTest"
						IsVisible="{Binding AdaptronicButtonIsVisible}"
						Command="{Binding LoadStatusTableOfResultCommand}">
					<Image Source="{SvgImage /Assets/icons/table.svg}"/>
				</Button>
				<Button Grid.Column="6"
	                    Name = "TableStatusOfMachine"
	                    Command="{Binding LoadStatusTableOfMachineCommand}">
					<Image Source="{SvgImage /Assets/icons/wrench.svg}"/>
				</Button>
				<Button Grid.Column="7"
                    Name = "ScreenShotButton"
                    Command="{Binding LoadStatusTableOfMachineCommand}">
					<Image Source="{SvgImage /Assets/icons/mark.svg}"/>
				</Button>
				<Button Grid.Column="8"
                    Name = "Reserve"
					IsVisible="false"
                    Command="">
					<Image Source="{SvgImage /Assets/icons/serialPort.svg}"/>
				</Button>
				<Button Grid.Column="9"
					Name = "AdaptronicButton"
				    IsVisible="{Binding AdaptronicButtonIsVisible}"
					Command="{Binding LoadPageAdaptronic}">
					<Image Source="{SvgImage /Assets/icons/adaptronic2.svg}"/>
				</Button>
				<Button Grid.Column="10"
					Name = "GoogleDriveButton"
					IsVisible="{Binding GoogleDriveButtonIsVisible}"
					Command="{Binding LoadFormFirstPartCommand}">
					<Image Source="{SvgImage /Assets/icons/googleDrive.svg}"/>
				</Button>
				<Button Grid.Column="11"
					Name = "InstructionButton"
					IsVisible="{Binding InstructionButtonIsVisible}"
					Command="{Binding LoadPageInstruction}">
					<Image Source="{SvgImage /Assets/icons/info.svg}"/>
				</Button>
				<Button Grid.Column="12"
					Name = "TargetPlanButton"
					IsVisible="{Binding TargetPlanButtonIsVisible}"
					Command="{Binding LoadPageTargetPlan}">
					<Image Source="{SvgImage /Assets/icons/targetPlan.svg}"/>
				</Button>
				<Button Grid.Column="13" Command="{Binding LoadPageSap}">
					<Image Source="{SvgImage /Assets/icons/sap.svg}"/>
				</Button>
				<Button Grid.Column="14" Name="SplunkPanelButton" Command="{Binding #SplunkPanelPopup.BeginOpen}">
					<Image Source="{SvgImage /Assets/icons/splunk.svg}"/>
				</Button>
				<!--IsVisible="{Binding IsLoginToApp}"-->
				<Button Grid.Column="15"
                        Name = "UserButton"
						IsVisible="{Binding UserButtonIsVisible}"
                        Command="{Binding  #LoginPanelPopup.BeginOpen}">
					<Image Source="{SvgImage /Assets/icons/userThin.svg}"/>
				</Button>
				<Button Grid.Column="16" Name ="OptionsPanelButton" Command="{Binding #OptionsPanelPopup.BeginOpen}" >
					<Image Source="{SvgImage /Assets/icons/gears.svg}"/>
				</Button>
			</Grid>
		</Border>


		<!-- Main area -->

		<Grid  Grid.Row="1" ColumnDefinitions="Auto, *, Auto">
			<!-- Navigation bar -->
			<StackPanel IsVisible="true" Grid.Row="0" Grid.Column="0" Width="250" Margin="10, 60, 20, 10" Orientation="Vertical" VerticalAlignment="Top" HorizontalAlignment="Center">
				<Button Classes="NavigationButton" Name="DowntimePanelButton" Command="{Binding #DowntimePanelPopup.BeginOpen}">
					<StackPanel Orientation="Horizontal" Margin="5">
						<Image HorizontalAlignment="Left" Source="{SvgImage /Assets/icons/emergencyColor.svg}"/>
						<TextBlock Text="Przestoje" />
					</StackPanel>
				</Button>
				<Button Classes="NavigationButton" Name="SettingPanelButton" Command="{Binding #SettingPanelPopup.BeginOpen}">
					<StackPanel Orientation="Horizontal"  Margin="5">
						<Image HorizontalAlignment="Left" Source="{SvgImage /Assets/icons/maintenance2.svg}"/>
						<TextBlock Text="Ustawienia" />
					</StackPanel>
				</Button>
				<Button Classes="NavigationButton" Name="MaintenancePanelButton" Command="{Binding #MaintenancePanelPopup.BeginOpen}">
					<StackPanel Orientation="Horizontal"  Margin="5">
						<Image HorizontalAlignment="Left" Source="{SvgImage /Assets/icons/broom.svg}"/>
						<TextBlock  Text="TPM" />
					</StackPanel>
				</Button>
				<Button Classes="NavigationButton" Name="LogisticPanelButton" Command="{Binding #LogisticPanelPopup.BeginOpen}">
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Left"  Margin="5">
						<Image HorizontalAlignment="Left" Source="{SvgImage /Assets/icons/logistic.svg}"/>
						<TextBlock Text="Logistyka"/>
					</StackPanel>
				</Button>
				<Button Classes="NavigationButton" Name="ProductionIssuesPanelButton" Command="{Binding #ProductionIssuesPanelPopup.BeginOpen}">
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Left"  Margin="5">
						<Image HorizontalAlignment="Left" Source="{SvgImage /Assets/icons/productionIssues.svg}"/>
						<TextBlock Text="Produkcja"/>
					</StackPanel>
				</Button>
			</StackPanel>
			<StackPanel Grid.Column="0" Grid.Row="1" Margin="5,5,5,5" VerticalAlignment="Bottom">
				<ItemsControl ItemsSource="{Binding MachineStatuses}">
					<ItemsControl.ItemTemplate>
						<DataTemplate x:DataType="dataModel:MachineStatus">
							<Button Classes="NavigationInfoButton"
									Command="{Binding $parent[ItemsControl].((viewModels:MainWindowViewModel)DataContext).ActualStatusButtonPressedCommand}"
									CommandParameter="{Binding}"
									Background="{Binding Color}"
									Margin="5">
								<Grid HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5">
									<!-- Define columns: the first for text (auto width), the second for the icon (fixed width) -->
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*" />
										<!-- Text column takes remaining space -->
										<ColumnDefinition Width="*" />
										<!-- Icon column takes only needed space -->
										<ColumnDefinition Width="Auto" />
										<!-- Empty space column on the right -->
									</Grid.ColumnDefinitions>
									<!-- Left section (Status and Times) -->
									<StackPanel Grid.Column="0" Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Center">
										<TextBlock Text="{Binding Status}" />
										<TextBlock Text="{Binding DurationStatus, StringFormat=' {0:hh\\:mm\\:ss}' }" HorizontalAlignment="Left" />
										<TextBlock Text="{Binding DurationService, StringFormat=' {0:hh\\:mm\\:ss}' }" HorizontalAlignment="Left"/>
									</StackPanel>

									<!-- Right section (Icons) -->
									<StackPanel Grid.Column="2" Margin ="30,0,0,0"  Orientation="Vertical" HorizontalAlignment="Right" VerticalAlignment="Center">
										<Image Width="30" Height="35" IsVisible="{Binding CallForServiceRunning}" Source="{SvgImage /Assets/icons/hourglass.svg}"/>
										<Image Width="30" Height="35" IsVisible="{Binding ServiceArrivalRunning}" Source="{SvgImage /Assets/icons/wrench.svg}"/>
									</StackPanel>
								</Grid>
							</Button>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</StackPanel>


			<!-- ControlPanel -->
			<Border  
			    Grid.Column="1"
				CornerRadius="10"
			    BorderBrush="{Binding IsActiveStatus, Converter={StaticResource BoolToBrushConverter}}"
			    BorderThickness="{Binding IsActiveStatus, Converter={StaticResource BoolToThicknessConverter}}">
			
			    <Grid>
			        <Image Grid.ColumnSpan="3" Source="/Assets/logoW16.png" Stretch="None"/>
			        
			        <UserControl
			            IsVisible="{Binding !ControlPanelVisible}"
			            CornerRadius="20"
			            Background="#232228"
			            Content="{Binding ActivePage}"
			            HorizontalAlignment="Stretch"
			            Margin="10,20,10,0"
			            VerticalAlignment="Stretch" />
			    </Grid>
			</Border>
			<StackPanel Margin ="0,2,2,2" Grid.RowSpan="3" Grid.Column="2" VerticalAlignment="Center" Orientation="Horizontal" IsVisible="{Binding VacuumButtonIsVisible}">
				<Grid VerticalAlignment="Center">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="*"/>
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>


					<ProgressBar Grid.Column="0" Grid.Row="0" Height="600" Width="25" Margin="1" Orientation="Vertical"
                                 Minimum="0" Maximum="100" Value="{Binding ProgressBarValue}"
                                 Foreground="{StaticResource OrangeRedBrush}"
                                 Background="#232228"
                                 FontWeight="SemiBold"
                                 IsVisible="{Binding VacuumProgressBarIsVisible}"/>
					<TextBlock Grid.Column="0" Grid.Row="0" Height="20" Width="50" Text="{Binding RemainingVacuumTime, StringFormat={}{0:mm}:{0:ss}}"
                               FontWeight="SemiBold" FontSize="18" Foreground="WhiteSmoke" Padding="0"
                               IsVisible="{Binding VacuumProgressBarIsVisible}"
                               HorizontalAlignment="Center" VerticalAlignment="Center">
						<TextBlock.RenderTransform>
							<RotateTransform Angle="-90"/>
						</TextBlock.RenderTransform>
					</TextBlock>
					<TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                               Foreground="WhiteSmoke"
                               FontSize="22" Margin="5,5"
                               FontWeight="SemiBold"
							   HorizontalAlignment="Center"
                               Text="{Binding PumpFourValue}"
                               IsVisible="{Binding VacuumProgressBarIsVisible}"/>
					<TextBlock Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
                               Foreground="WhiteSmoke"
                               FontSize="16" Margin="5,0"
                               FontWeight="SemiBold"
                               HorizontalAlignment="Center"
                               Text="mBar"
                               IsVisible="{Binding VacuumProgressBarIsVisible}"/>
					<Button Grid.Column="1" Grid.Row ="0"
					IsVisible="true"
					MaxWidth="35"
					Margin="2,2,2,2"
					Height="600"
					Name="VacuumButton"
					Background="#232228"
					Command="{Binding #VacuumPanelPopup.BeginOpen}"
					HorizontalContentAlignment="Center"
					VerticalContentAlignment="Center">
						<Image MaxHeight="35" MaxWidth="35" Source="{SvgImage /Assets/icons/arrowsWhite.svg}" />
					</Button>
				</Grid>
			</StackPanel>
		</Grid>


		<!-- Bottom bar -->
		<Grid Grid.Row="2">
			<StackPanel Orientation="Horizontal">
				<TextBlock Margin ="10, 0, 15,5" Text="{Binding CurrentTime, StringFormat={}{0:hh}:{0:mm}}"
						   FontWeight="SemiBold" FontSize="18" Foreground="WhiteSmoke"
						   HorizontalAlignment="Left" VerticalAlignment="Center">
				</TextBlock>
				<Image Grid.Column="2"
					   Width="25"
					   Height="25"
					   Margin =" 10, 0, 10,5"
	                   Source="{SvgImage /Assets/icons/sendingToSplunk.svg}"
	                   IsVisible="{Binding DataIsSendingToSplunk}">
				</Image>
			</StackPanel>
		</Grid>
	</Grid>


</Window>
